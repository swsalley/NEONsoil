# NEON network soils data to quantify soil variability
#
# File: CorrelationDataSet_20220722.R
# Output: Neon_Soil_All20220721.csv
#
# Description: This file downloads NEON soil megapit and distributed plot data 
#  to generate a modeling dataset for analysis of megapits and disturted plots.
#
# Author: S.W. Salley, shawn.salley@usda.gov
#

# Libraries
library(neonUtilities) # add version for control compatablity 
library(dplyr)
library(aqp)
library(corrplot)
library(reshape2)

#### load modeling dataset ####
setwd("E:/Publications/NEON/R")
soil.all <- read.csv("Neon_Soil_All20220721.csv")
str(soil.all)

#### SoilProfileCollection-class object ####
depths(soil.all) <- plotID  ~ biogeoTopDepth + biogeoBottomDepth
physical.dist <- profile_compare(soil.all, vars=c( "sandTotal","siltTotal","clayTotal", "coarseFrag2To20"), 
                                 max_d=100, k=.03, sample_interval=1, rescale.result = T, replace_na=T)
physical.dist <- melt(as.matrix(physical.dist), varnames = c("row", "col"))
physical.dist <- physical.dist[physical.dist$value != 0,] # remove 0's (self) for statistics
physical.dist$siteID <- substr(physical.dist$row, start = 1, stop = 4) 
# summary(physical.dist) # data 0 to 1 ? yes, it worked 

#
ste <- function(x) round(sd(x)/sqrt(length(x)),4)
phys.plot.toall <- physical.dist %>% group_by(row) %>% 
  summarise(phys.plot.glob.avg=mean(value), phys.plot.glob.avg=mean(value), phys.plot.glob.sd=sd(value), phys.plot.glob.ste=ste(value))
phys.site.toall <- physical.dist %>% group_by(siteID) %>% #this lacks ability to tease out depths, rerun with class breaks and without organic soils
  summarise(phys.site.glob.avg=mean(value), phys.site.glob.sd=sd(value), phys.site.glob.ste=ste(value)) 
#
rm( physical.dist)
#


#### Soil chemical Properties of Distributed Plots ####

chem.dist <- profile_compare(soil.all, vars=c("carbonTot","nitrogenTot", "sulfurTot", "cecdNh4","phCacl2","ec12pre"),    
                             max_d=100, k=.03, sample_interval=1, rescale.result = T, replace_na=T)
chem.dist <- melt(as.matrix(chem.dist), varnames = c("row", "col"))
chem.dist <- chem.dist[chem.dist$value != 0,]
chem.dist$siteID <- substr(chem.dist$row, start = 1, stop = 4)
#
chem.plot.toall <- chem.dist %>% group_by(row) %>% summarise(chem.plot.glob.avg=mean(value), chem.plot.glob.sd=sd(value), chem.plot.glob.ste=ste(value))
chem.site.toall <- chem.dist %>% group_by(siteID) %>% summarise(chem.site.glob.avg=mean(value), chem.site.glob.sd=sd(value), chem.site.glob.ste=ste(value))
#
rm(chem.dist)


#### correlation of all Properties of Distributed Plots

all.dist <- profile_compare(soil.all, vars=c("coarseFrag2To20", "sandTotal","siltTotal","clayTotal",
                                             "carbonTot", "nitrogenTot", "sulfurTot", "cecdNh4", "phCacl2", "ec12pre"),    #add sulfer back in
                            max_d=100, k=.03, sample_interval=1, rescale.result = T, replace_na=T)
all.dist <- melt(as.matrix(all.dist), varnames = c("row", "col"))
all.dist <- all.dist[all.dist$value != 0,]
all.dist$siteID <- substr(all.dist$row, start = 1, stop = 4)
#
all.plot.toall <- all.dist %>% group_by(row) %>% summarise(all.plot.glob.avg=mean(value), all.plot.glob.sd=sd(value), all.plot.glob.ste=ste(value))
all.site.toall <- all.dist %>% group_by(siteID) %>% summarise(all.site.glob.avg=mean(value), all.site.glob.sd=sd(value), all.site.glob.ste=ste(value))
#
rm(all.dist)
#

#### loop through each plot average per site ####

all.sites.list <- unique(soil.all$siteID)
all.plot.toPlot <- data.frame()
#

# all per plot
for (i in 1:length(all.sites.list)) {
  select <- subset(soil.all, siteID == all.sites.list[i])
  select.1 <- profile_compare(select, vars=c("coarseFrag2To20","sandTotal","siltTotal","clayTotal","carbonTot", 
                                             "nitrogenTot", "sulfurTot", "cecdNh4", "phCacl2", "ec12pre"), #add sulfer back in later
                              max_d=100, k=.03, sample_interval=1, rescale.result = T, replace_na=T)
  select.2 <- melt(as.matrix(select.1), varnames = c("row", "col"))
  select.2$siteID <- substr(select.2$row, start = 1, stop = 4) 
  select.2 <- select.2[select.2$value != 0,]
  select.2 <- select.2 %>% group_by(row) %>% summarise(all.plot.loc.avg=mean(value), all.plot.loc.sd=sd(value), all.plot.loc.ste=ste(value))
  all.plot.toPlot <- rbind(all.plot.toPlot,select.2)
}

# phys per plot
phys.plot.toPlot <- data.frame()
for (i in 1:length(all.sites.list)) {
  select <- subset(soil.all, siteID == all.sites.list[i])
  select.1 <- profile_compare(select, vars=c("coarseFrag2To20","sandTotal","siltTotal","clayTotal"), 
                              max_d=100, k=.03, sample_interval=1, rescale.result = T, replace_na=T)
  select.2 <- melt(as.matrix(select.1), varnames = c("row", "col"))
  select.2$siteID <- substr(select.2$row, start = 1, stop = 4) 
  select.2 <- select.2[select.2$value != 0,]
  select.2 <- select.2 %>% group_by(row) %>% summarise(phys.plot.loc.avg=mean(value), phys.plot.loc.sd=sd(value), phys.plot.loc.ste=ste(value))
  phys.plot.toPlot <- rbind(phys.plot.toPlot,select.2)
}

#chem per plot
chem.plot.toPlot <- data.frame()
for (i in 1:length(all.sites.list)) {
  select <- subset(soil.all, siteID == all.sites.list[i])
  select.1 <- profile_compare(select, vars=c("carbonTot", "nitrogenTot", "sulfurTot", "cecdNh4", "phCacl2", "ec12pre"), 
                              max_d=100, k=.03, sample_interval=1, rescale.result = T, replace_na=T)
  select.2 <- melt(as.matrix(select.1), varnames = c("row", "col"))
  select.2$siteID <- substr(select.2$row, start = 1, stop = 4) 
  select.2 <- select.2[select.2$value != 0,]
  select.2 <- select.2 %>% group_by(row) %>% summarise(chem.plot.loc.avg=mean(value), chem.plot.loc.sd=sd(value), chem.plot.loc.ste=ste(value))
  chem.plot.toPlot <- rbind(chem.plot.toPlot,select.2)
}


#### loop through each site average per site ####

all.site.toPlot <- data.frame()
# all per plot
for (i in 1:length(all.sites.list)) {
  select <- subset(soil.all, siteID == all.sites.list[i])
  select.1 <- profile_compare(select, vars=c("coarseFrag2To20","sandTotal","siltTotal","clayTotal","carbonTot",
                                             "nitrogenTot", "sulfurTot", "cecdNh4", "phCacl2", "ec12pre"), 
                              max_d=100, k=.03, sample_interval=1, rescale.result = T, replace_na=T)
  select.2 <- melt(as.matrix(select.1), varnames = c("row", "col"))
  select.2$siteID <- substr(select.2$row, start = 1, stop = 4) 
  select.2 <- select.2[select.2$value != 0,]
  select.2 <- select.2 %>% group_by(siteID) %>% summarise(all.site.loc.avg=mean(value), all.site.loc.sd=sd(value), all.site.loc.ste=ste(value))
  all.site.toPlot <- rbind(all.site.toPlot,select.2)
}

# phys per plot
phys.site.toPlot <- data.frame()
for (i in 1:length(all.sites.list)) {
  select <- subset(soil.all, siteID == all.sites.list[i])
  select.1 <- profile_compare(select, vars=c("coarseFrag2To20","sandTotal","siltTotal","clayTotal"), 
                              max_d=100, k=.03, sample_interval=1, rescale.result = T, replace_na=T)
  select.2 <- melt(as.matrix(select.1), varnames = c("row", "col"))
  select.2$siteID <- substr(select.2$row, start = 1, stop = 4) 
  select.2 <- select.2[select.2$value != 0,]
  select.2 <- select.2 %>% group_by(siteID) %>% summarise(phys.site.loc.avg=mean(value), phys.site.loc.sd=sd(value), phys.site.loc.ste=ste(value))
  phys.site.toPlot <- rbind(phys.site.toPlot,select.2)
}

#chem per plot
chem.site.toPlot <- data.frame()
for (i in 1:length(all.sites.list)) {
  select <- subset(soil.all, siteID == all.sites.list[i])
  select.1 <- profile_compare(select, vars=c("carbonTot", "nitrogenTot", "sulfurTot", "cecdNh4", "phCacl2", "ec12pre"), 
                              max_d=100, k=.03, sample_interval=1, rescale.result = T, replace_na=T)
  select.2 <- melt(as.matrix(select.1), varnames = c("row", "col"))
  select.2$siteID <- substr(select.2$row, start = 1, stop = 4) 
  select.2 <- select.2[select.2$value != 0,]
  select.2 <- select.2 %>% group_by(siteID) %>% summarise(chem.site.loc.avg=mean(value), chem.site.loc.sd=sd(value), chem.site.loc.ste=ste(value))
  chem.site.toPlot <- rbind(chem.site.toPlot,select.2)
}

#
head(all.site.toPlot)
head(phys.site.toPlot)
head(chem.site.toPlot)
#
head(all.plot.toPlot)
head(phys.plot.toPlot)
head(chem.plot.toPlot)
#
head(all.site.toall)
head(phys.site.toall)
head(chem.site.toall)
#
head(all.plot.toall)
head(phys.plot.toall)
head(chem.plot.toall)
#
#
site.toall <- bind_cols(all.site.toall, phys.site.toall[2:4], chem.site.toall[2:4])
plot.toall <- bind_cols(all.plot.toall, phys.plot.toall[2:4], chem.plot.toall[2:4])
site.toPlot <- bind_cols(all.site.toPlot, phys.site.toPlot[2:4], chem.site.toPlot[2:4])
plot.toPlot <- bind_cols(all.plot.toPlot, phys.plot.toPlot[2:4], chem.plot.toPlot[2:4])
#
site.toall <- site.toall[order(site.toall$siteID),]
site.toPlot <- site.toPlot[order(site.toPlot$siteID),]
#
#
length(site.toall$siteID) # 47
length(plot.toall$row) # 762
length(site.toPlot$siteID) # 46
length(plot.toPlot$row) # 761
# TEAK has megapit, no distributed data (20220721), remove megapit summary stats from "toall"
length(site.toall[site.toall$siteID !="TEAK",]$siteID) # 46
length(plot.toall[plot.toall$row !="TEAK_mp",]$row) # 761
#
site.toall <- site.toall[site.toall$siteID !="TEAK",] # 46
plot.toall <- plot.toall[plot.toall$row !="TEAK_mp",] # 761
#
# ADD site name to plot level correlation table 
plot.toall$siteID <- substr(plot.toall$row, start = 1, stop = 4) 
plot.toPlot$siteID <- substr(plot.toPlot$row, start = 1, stop = 4) 

#
#
NEON_ARIDITY <- read.csv("D:/r/NEON/NEON_ARIDITY.csv") #aridity index by each plot completed by coauthor
NEON_ARIDITY.site <- NEON_ARIDITY %>% group_by(siteID) %>% summarise(AI.avg=mean(AridityIndex))
#
NEON_ARIDITY.site$type <- ""
NEON_ARIDITY.site[NEON_ARIDITY.site$AI.avg >= 0.05 & NEON_ARIDITY.site$AI.avg < 0.2,]$type <- "arid"
NEON_ARIDITY.site[NEON_ARIDITY.site$AI.avg >= 0.2 & NEON_ARIDITY.site$AI.avg < 0.5,]$type <- "semi-arid"
NEON_ARIDITY.site[NEON_ARIDITY.site$AI.avg >= 0.5 & NEON_ARIDITY.site$AI.avg < 0.65,]$type <- "dry subhumid"
NEON_ARIDITY.site[NEON_ARIDITY.site$AI.avg >= 0.65,]$type <- "humid"
#
#
site.all <- left_join(site.toall, site.toPlot, by = "siteID")
site.all <-left_join(site.all, NEON_ARIDITY.site, by = "siteID")
#
NEON_ARIDITY$type <- ""
NEON_ARIDITY[NEON_ARIDITY$AridityIndex >= 0.05 &NEON_ARIDITY$AridityIndex < 0.2,]$type <- "arid"
NEON_ARIDITY[NEON_ARIDITY$AridityIndex >= 0.2 & NEON_ARIDITY$AridityIndex < 0.5,]$type <- "semi-arid"
NEON_ARIDITY[NEON_ARIDITY$AridityIndex >= 0.5 & NEON_ARIDITY$AridityIndex < 0.65,]$type <- "dry subhumid"
NEON_ARIDITY[NEON_ARIDITY$AridityIndex >= 0.65,]$type <- "humid"
NEON_ARIDITY <- NEON_ARIDITY[-1,]
#
plot.all <- left_join(plot.toall, plot.toPlot, by = "row")
plot.all <- left_join(plot.all, NEON_ARIDITY[,c(3,10,11)], by = c("row" = "plotID"))
plot.all[plot.all$row == "JORN_003",][,c(1:2,5,8)]
site.all[site.all$siteID  == "JORN",][,c(1:2,5,8)]
#

#change  ste to be per site's plot n
all.plot.toPlot$siteID <- substr(all.plot.toPlot$row, start = 1, stop = 4) 
siteID.n <- all.plot.toPlot %>% group_by(siteID) %>% summarise(n = n())
site.all <- left_join(site.all, siteID.n, by = "siteID")
#
site.all$all.site.glob.ste <- site.all$all.site.glob.sd / site.all$n
site.all$phys.site.glob.ste <- site.all$phys.site.glob.sd / site.all$n
site.all$chem.site.glob.ste <- site.all$chem.site.glob.sd / site.all$n
site.all$all.site.loc.ste <- site.all$all.site.loc.sd / site.all$n
site.all$phys.site.loc.ste <- site.all$phys.site.loc.sd / site.all$n
site.all$chem.site.loc.ste <- site.all$chem.site.loc.sd / site.all$n

# plot.all is the summary statistics for plot level data
setwd("E:/Publications/NEON/R")
write.csv(site.all, "Neon_Plot_All20220722.csv")


# site.all is the summary statistics for site level data
setwd("E:/Publications/NEON/R")
write.csv(site.all, "Neon_Site_All20220722.csv")


#### end ####
